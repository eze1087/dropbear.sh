#!/bin/bash
#25/01/2021 - Parte 1: inicialización y funciones básicas

clear
clear

SCPdir="/etc/VPS-MX"
SCPfrm="${SCPdir}/herramientas" && [[ ! -d ${SCPfrm} ]] && exit
SCPinst="${SCPdir}/protocolos" && [[ ! -d ${SCPinst} ]] && exit

declare -A cor=(
  [0]="\033[1;37m"
  [1]="\033[1;34m"
  [2]="\033[1;31m"
  [3]="\033[1;33m"
  [4]="\033[1;32m"
)

mportas () {
  unset portas
  portas_var=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" | grep -v "COMMAND" | grep "LISTEN")
  while read port; do
    var1=$(echo "$port" | awk '{print $1}')
    var2=$(echo "$port" | awk '{print $9}' | awk -F ":" '{print $2}')
    [[ "$(echo -e $portas | grep "$var1 $var2")" ]] || portas+="$var1 $var2\n"
  done <<< "$portas_var"
  echo -e "$portas"
}

fun_ip() {
  if [[ -e /etc/VPS-MX/MEUIPvps ]]; then
    IP="$(cat /etc/VPS-MX/MEUIPvps)"
  else
    MEU_IP=$(ip addr | grep 'inet ' | grep -v 'inet6' | grep -v '127.0.0.1' | awk '{print $2}' | cut -d'/' -f1 | head -1)
    MEU_IP2=$(wget -qO- ipv4.icanhazip.com)
    [[ "$MEU_IP" != "$MEU_IP2" ]] && IP="$MEU_IP2" || IP="$MEU_IP"
    echo "$IP" > /etc/VPS-MX/MEUIPvps
  fi
}

fun_eth () {
  eth=$(ip link show | grep -v 'lo' | grep -v 'inet6' | grep -oP '^[0-9]+: \K[^:]+' | head -1)
  if [[ "$eth" != "" ]]; then
    echo -e "${cor[3]} Aplicar mejoras para mejorar paquetes SSH? (S/N)"
    read -p " [S/N]: " -e -i n sshsn
    [[ "$sshsn" = @(s|S|y|Y) ]] && {
      echo -e "${cor[1]} Corrección de problemas de paquetes en SSH..."
      echo -e " Cual es la tasa RX"
      echo -ne "[ 1 - 999999999 ]: "; read rx
      [[ "$rx" = "" ]] && rx="999999999"
      echo -e " Cual es la tasa TX"
      echo -ne "[ 1 - 999999999 ]: "; read tx
      [[ "$tx" = "" ]] && tx="999999999"
      apt-get install -y ethtool
      ethtool -G "$eth" rx "$rx" tx "$tx"
    }
  fi
}
# Función de la barra de progreso (parte 1)
fun_bar () {
  comando="$1"
  _=$($comando > /dev/null 2>&1) & pid=$!
  while [[ -d /proc/$pid ]]; do
    echo -ne " \033[1;33m["
    for ((i=0; i<20; i++)); do
      echo -ne "\033[1;31m##"
      sleep 0.8
    done
    echo -ne "\033[1;33m]"
    sleep 1
    echo
    tput cuu1 && tput dl1
  done
  echo -ne " \033[1;33m[\033[1;31m####################\033[1;33m] - \033[1;32m100%\033[0m\n"
  sleep 1
}
# Función para instalar y configurar dropbear
fun_dropbear () {
  [[ -e /etc/default/dropbear ]] && {
    echo -e "${cor[2]} Eliminando Dropbear..."
    service dropbear stop &>/dev/null
    fun_bar "apt-get remove dropbear -y"
    rm -f /etc/default/dropbear
  }
  echo -e "${cor[2]} Instalando Dropbear..."
  fun_bar "apt-get install dropbear -y"
  touch /etc/dropbear/banner
  echo -e "${cor[2]} Configurando Dropbear..."
  cat <<EOF > /etc/default/dropbear
NO_START=0
DROPBEAR_EXTRA_ARGS=""
DROPBEAR_BANNER="/etc/dropbear/banner"
DROPBEAR_RECEIVE_WINDOW=65536
EOF

  # Input de puertos
  echo -e "${cor[3]} Ingresa los puertos para dropbear, separados por espacios (por ejemplo: 22 80 443):"
  read -p "Puertos: " DPORTS

  # Configurar los puertos en /etc/default/dropbear
  sed -i '/DROPBEAR_EXTRA_ARGS=/d' /etc/default/dropbear
  for port in $DPORTS; do
    sed -i "/DROPBEAR_EXTRA_ARGS=/a DROPBEAR_EXTRA_ARGS=\"-p $port\"" /etc/default/dropbear
  done

  # Reiniciar dropbear
  systemctl restart dropbear
  echo -e "${cor[2]} Dropbear instalado y configurado con éxito."
}

# Función para abrir los puertos en UFW
abrir_puertos () {
  echo -e "${cor[3]} Abriendo puertos en UFW..."
  for p in $@; do
    ufw allow "$p"
  done
  ufw reload
}

# Llamada a la función principal
# Puedes descomentar la línea siguiente para que se ejecute automáticamente al correr el script
# fun_dropbear

# Para abrir puertos, usar así:
# abrir_puertos 22 80 443
